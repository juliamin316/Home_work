# Сортировка пузырьком 
def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

# Сортировка выбором
def selection_sort(arr):
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i+1, n):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

# Быстрая сортировка
def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[0]
    left = []
    right = []
    for i in range(1, len(arr)):
        if arr[i] < pivot:
            left.append(arr[i])
        else:
            right.append(arr[i])
    return quick_sort(left) + [pivot] + quick_sort(right)

# анализ 
import timeit
import random

def generate_array(length):
    return [random.randint(0, 100000) for _ in range(length)]

array_lengths = [100, 1000, 10000, 100000]

for length in array_lengths:
    arr = generate_array(length)
    print(f"Array length: {length}")
    
    # Bubble sort
    bubble_sort_time = timeit.timeit(lambda: bubble_sort(arr), number=100)
    print(f"Bubble sort: {bubble_sort_time:.5f} seconds")
    
    # Selection sort
    selection_sort_time = timeit.timeit(lambda: selection_sort(arr), number=100)
    print(f"Selection sort: {selection_sort_time:.5f} seconds")
    
    # Quick sort
    quick_sort_time = timeit.timeit(lambda: quick_sort(arr), number=100)
    print(f"Quick sort: {quick_sort_time:.5f} seconds")
    
    # Sorted
    sorted_time = timeit.timeit(lambda: sorted(arr), number=100)
    print(f"Sorted: {sorted_time:.5f} seconds")
    
    print("-" * 40)

# Результат выполнения кода:
Array length: 100
Bubble sort: 0.00620 seconds
Selection sort: 0.00237 seconds
Quick sort: 0.00045 seconds
Sorted: 0.00009 seconds
----------------------------------------
Array length: 1000
Bubble sort: 0.46909 seconds
Selection sort: 0.14703 seconds
Quick sort: 0.00289 seconds
Sorted: 0.00036 seconds
----------------------------------------
Array length: 10000
Bubble sort: 62.59052 seconds
Selection sort: 12.86131 seconds
Quick sort: 0.04562 seconds
Sorted: 0.00447 seconds
----------------------------------------
Array length: 100000
Bubble sort: 9423.24809 seconds
Selection sort: 1246.82135 seconds
Quick sort: 
